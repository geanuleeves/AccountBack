# set server port
server:
  port: 8080  # 配置端口
  context-path: / # 项目启动地址为 localhost:8080/

spring:
  profiles:
    active: dev
  datasource: # set database generator
    url: jdbc:mysql://localhost:3306/account?useUnicode=true&characterEncoding=utf8&useSSL=false
    username: root
    password: root
    driver-class-name: com.mysql.jdbc.Driver
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 1
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUA
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxOpenPreparedStatements: 20
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true
  jpa: # set jpa
    database: MYSQL # specify ths DBMS
    show-sql: true # show or not log for each sql query
    hibernate:
      ddl-auto: update # Hibernate ddl auto(create, create-drop, update)
      naming: # naming strategy
        strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate: # stripped before adding them to entity manager
        dialect: org.hibernate.dialect.MySQL5Dialect
  aop: #设置aop,aop依赖添加后默认是启用的
    proxy-target-class: true
  redis:
    host: localhost
    port: 6379
    timeout: 100000 # 连接超时
    password:
    pool:
        maxIdle: 10   #最大空闲连接
        max-active: 8   # 最大连接数
        max-wait: -1  # 最大等待时间（使用负值表示没有限制）
        min-idle: 0   # 连接池最小空闲连接
  encoding:
     force: true

  # Thymeleaf view template generator
  # disable cache for dev
  # 配置和此项目无关，主要为设置thymeleaf 不严格检查HTML5
  thymeleaf:
    cache: false
    encoding: UTF-8
    # 设置LEGACYHTML5 并添加依赖 可以使thymeleaf不严格模式
    mode: LEGACYHTML5
  session:
    store-type: none

  mvc:
    view: # 默认前后缀
      prefix: /
      suffix: .html
    static-path-pattern: /**
#logging: #相对位置，根目录
#  path: var/log
# 日志级别 TRACE < DEBUG < INFO < WARN < ERROR < FATAL
#logging: # 配置日志文件的配置方式  logback-spring.* 也为spring的默认命名规则
#  generator: logback.xml


## Mybatis 配置
mybatis:
    mapperLocations: classpath:mapper/*.xml
    typeAliasesPackage: com.wildb.account.entity
    configuration:
        map-underscore-to-camel-case: true # 开启驼峰命名规则
        #use-generated-keys: true  # 使用jdbc的getGeneratedKeys 获取数据库自增主键
        use-column-label: true # 使用列名替换别名 默认为true

# 通用mapper
mapper:
    #mappers 多个接口时逗号隔开
    mappers: com.wildb.account.common.utils.MyMapper
    not-empty: false
    #identity: MYSQL
    identity: select replace(uuid(),"-","")
    before: true


#pagehelper分页插件配置
pagehelper:
    helperDialect: mysql
    pagehelper: reasonable=true
    supportMethodsArguments: true
    params: count=countSql



